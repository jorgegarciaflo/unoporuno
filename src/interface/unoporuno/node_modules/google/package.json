{
  "name": "google",
  "version": "1.1.0",
  "description": "A module to search and scrape google. This is not sponsored, supported, or affiliated with Google Inc.",
  "homepage": "https://github.com/jprichardson/node-google",
  "repository": {
    "type": "git",
    "url": "https://github.com/jprichardson/node-google"
  },
  "keywords": [
    "google",
    "search",
    "scrape",
    "scraper",
    "screen"
  ],
  "author": {
    "name": "JP Richardson",
    "email": "jprichardson@gmail.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/jprichardson/node-google/raw/master/LICENSE"
    }
  ],
  "dependencies": {
    "cheerio": "^0.19.0",
    "request": "^2.54.0"
  },
  "devDependencies": {
    "mocha": "*",
    "standard": "^3.2.1"
  },
  "main": "./lib/google",
  "scripts": {
    "test": "standard && mocha"
  },
  "readme": "Node.js - google\n=====================\n\n[![build status](https://secure.travis-ci.org/jprichardson/node-google.png)](http://travis-ci.org/jprichardson/node-google)\n\nThis module allows you to search google by scraping the results. It does NOT use the Google Search API. PLEASE DO NOT ABUSE THIS. The intent of using this is convenience vs the cruft that exists in the Google Search API.\n\nThis is not sponsored, supported, or affiliated with Google Inc.\n\n[![js-standard-style](https://raw.githubusercontent.com/feross/standard/master/badge.png)](https://github.com/feross/standard)\n\n\nInstallation\n------------\n\n    npm install --save google\n\n\n\nAPI Example\n-------\n\nThis prints out the first 50 search results of the query `node.js best practices`.\n\n```js\nvar google = require('google')\n\ngoogle.resultsPerPage = 25\nvar nextCounter = 0\n\ngoogle('node.js best practices', function (err, next, links){\n  if (err) console.error(err)\n\n  for (var i = 0; i < links.length; ++i) {\n    console.log(links[i].title + ' - ' + links[i].link) // link.href is an alias for link.link\n    console.log(links[i].description + \"\\n\")\n  }\n\n  if (nextCounter < 4) {\n    nextCounter += 1\n    if (next) next()\n  }\n})\n```\n\nYou can also specify the TLD of the Google search page and the language.\nIf you change the language you must translate the next page results text to detect the corresponding link.\n\n```js\nvar google = require('google')\n\ngoogle.lang = 'de'\ngoogle.tld = 'de'\ngoogle.nextText = 'Weiter'\n\ngoogle('node.js best practices', function (err, next, links){\n  …\n})\n```\n\nYou can specify the options to be passed to request, see the [request module](https://github.com/request/request) for all available options.\n\n```js\nvar google = require('google')\n\ngoogle.requestOptions = {\n  proxy: 'http://user:password@192.168.5.4:80',\n  timeout: 30000,\n  localAddress: '127.0.0.1',\n  jar: true,\n  headers: {\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'en;q=0.5',\n    'Cache-Control': 'max-age=0',\n    'Connection': 'keep-alive',\n    'DNT': 1\n  }\n}\n\ngoogle('node.js best practices', function (err, next, links){\n  …\n})\n```\n\n\nContributors\n------------\n\n* [JP Richardson](https://github.com/jprichardson)\n* [Antonio Cancio](https://github.com/cancio)\n* [Mike Anderson](https://github.com/cambridgemike)\n* [ithil](https://github.com/ithil)\n* [Jaimie Pillora](https://github.com/jpillora)\n* [Jan Ehrhardt](https://github.com/jehrhardt)\n* [Griffith T. Pickett](https://github.com/tpickett)\n\n\nLicense\n-------\n\nLicensed under MIT. See `LICENSE` for more details.\n\nCopyright (c) 2012-2015 JP Richardson\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jprichardson/node-google/issues"
  },
  "_id": "google@1.1.0",
  "dist": {
    "shasum": "82d2820a18f54e51c831fa411a7059f9b4c6e90a"
  },
  "_from": "google@",
  "_resolved": "https://registry.npmjs.org/google/-/google-1.1.0.tgz"
}
